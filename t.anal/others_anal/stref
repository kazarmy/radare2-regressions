#!/bin/sh
# LGPL - Copyright (C) 2015-2018 pancake

for a in . .. ../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh ; done

NAME="auto string memory reference (iopa)"
BROKEN=
FILE=malloc://8096
IGNORE_ERR=1
ARGS=
CMDS='e asm.relsub=false
e asm.arch = x86
e asm.bits=64
e scr.color = false
e io.va=0
e asm.lines=0
e asm.bytes=0
e asm.cmt.right=10
wx 488b3541100000
wv8 0x500 @ 0x1048
w Hello @ 0x500
pd 1
'
EXPECT='  ; [0x1048:8]=0x500 "Hello"
  0x00000000      mov rsi, qword [rip + 0x1041]
'
run_test

NAME="auto string memory reference (io.va)"
BROKEN=
FILE=malloc://8096
IGNORE_ERR=1
ARGS=
CMDS='e asm.relsub=false
e asm.arch = x86
e asm.bits=64
e scr.color = false
e io.va=1
e asm.lines=0
e asm.bytes=0
e asm.cmt.right=10
wx 488b3541100000
wv8 0x500 @ 0x1048
w Hello @ 0x500
pd 1
'
EXPECT='  ; [0x1048:8]=0x500 "Hello"
  0x00000000      mov rsi, qword [rip + 0x1041]
'
run_test

NAME='no string on jmp'
ARGS=
CMDS='e asm.arch=x86
e asm.bits=32
e emu.str=true
wa jmp 0x100
w hello @ 0x100
pd 1
'
EXPECT='        ,=< 0x00000000      e9fb000000     jmp 0x100
'
run_test

NAME='no string on cbz'
ARGS=
CMDS='e asm.arch=arm
e asm.bits=64
e cfg.bigendian=false
e emu.str=true
wv 0x52800015
wv 0x340000b5 @ 4
w hello @ 0x18
pd 2
'
EXPECT='            0x00000000      15008052       movz w21, 0
        ,=< 0x00000004      b5000034       cbz w21, 0x18               ; likely
'
run_test
