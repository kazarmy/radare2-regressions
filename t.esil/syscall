#!/bin/sh

# GPL 3+ - Copyright (C) 2015 pancake

for a in . .. ../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh ; done

NAME='aecs'
FILE=-
ARGS='-ax86 -b32'
IGNORE_ERR=0
CMDS='
"wa mov eax,33;int 0x80"
aecs
'
EXPECT_ERR='syscall at 0x00000005
'
run_test

NAME='cmd.esil.intr unset'
FILE=-
ARGS=''
IGNORE_ERR=0
CMDS='
wx b8010000000f34b801000000cd80ebfe
10aes
'
EXPECT=''
run_test

NAME='cmd.esil.intr set'
FILE=-
ARGS=''
IGNORE_ERR=0
CMDS='
e asm.bits=64
e asm.arch = x86
e anal.arch = x86
wx b8010000000f34b801000000cd80ebfe
e cmd.esil.intr=?e SYSCALL
10aes
'
EXPECT='SYSCALL 128 0
'
run_test

NAME='x86-64 linux syscall'
FILE=../bins/elf/syscall_x86
CMDS='
e asm.bytes=0
e asm.lines=0
e emu.str=1
e asm.cmt.col=30
pd 5~write
'
EXPECT='  0x004000f1      syscall     ; 1 = write (1, "Hello, world!.", 14)
'
run_test

NAME='x86-64 linux syscall emulation'
FILE=../bins/elf/syscall_x86
CMDS='
s entry0
dr rip=$$
4aes
s..f1
as
'
EXPECT='1 = write (1, "Hello, world!.", 14)
'
run_test

NAME='x86-64 linux syscall emulation'
FILE=../bins/elf/syscall_x86
CMDS='
s entry0
dr rip=$$
4ds
s..f1
as
'
EXPECT='1 = write (1, "Hello, world!.", 14)
'
run_test

NAME='x86-16 dos syscall'
FILE=-
ARGS='-ax86 -b16 -kdos'
IGNORE_ERR=0
CMDS='
"wa mov ah,0x30;int 0x21"
aecu 0x4
as
'
EXPECT='48 = GetDOSVersion ()
'
run_test
