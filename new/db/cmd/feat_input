NAME=newline ?e 

FILE=malloc://1024
EXPECT=<<EOF

EOF
CMDS=<<EOF
# The test suite is not allowed to interpret the output!
?e 
EOF
RUN

NAME=comments
FILE=malloc://1024
EXPECT=<<EOF
0x0
EOF
CMDS=<<EOF
# This is a comment.
# This is a comment with a ; in it - and it is still only a comment.
# Other stuff is also ignored: `..` ~ ..

# But inside a command line only the commands after the # are ignored.
?v $$ # this must beignored ; ?v $$ | ls
EOF
RUN

NAME=w foo#bar
FILE=malloc://1024
EXPECT=<<EOF
foo#bar
EOF
CMDS=<<EOF
w foo#bar
psz
EOF
RUN

NAME="quoted"
FILE=malloc://1024
EXPECT=<<EOF
fuck;you@23
EOF
CMDS=<<EOF
"w fuck;you@23"
psz
EOF
RUN

NAME="quoted"@addr
FILE=malloc://1024
EXPECT=<<EOF
fuck;you@23
EOF
CMDS=<<EOF
"w fuck;you@23"@0x10
psz@0x10
EOF
RUN

NAME="?e foo" "?e bar"
FILE=malloc://1024
EXPECT=<<EOF
foo
bar
EOF
CMDS=<<EOF
"?e foo";"?e bar"
EOF
RUN

NAME=at3 "?vi $$"@3;"?e bar"
FILE=malloc://1024
EXPECT=<<EOF
3
bar
EOF
CMDS=<<EOF
"?vi $$"@3;?e bar
EOF
RUN

NAME=at3 "?vi $$"@3;"?e bar"
FILE=malloc://1024
EXPECT=<<EOF
3
bar
EOF
CMDS=<<EOF
"?vi $$"@3;"?e bar"
EOF
RUN

NAME="?v 1>>>2 ror"
FILE=malloc://1024
EXPECT=<<EOF
0x4000000000000000
EOF
CMDS=<<EOF
"?v 1>>>2"
EOF
RUN

NAME="?v 0xdeadbeef<<<40 rol"
FILE=malloc://1024
EXPECT=<<EOF
0xadbeef00000000de
EOF
CMDS=<<EOF
"?v 0xdeadbeef<<<40"
EOF
RUN

NAME=?e foo;?e bar
FILE=malloc://1024
EXPECT=<<EOF
foo
bar
EOF
CMDS=<<EOF
?e foo;?e bar
EOF
RUN

NAME=;?e bar
FILE=malloc://1024
EXPECT=<<EOF
bar
EOF
CMDS=<<EOF
;?e bar
EOF
RUN

NAME='>' in cmd: agn "sh->fu"
FILE=-
CMDS=<<EOF
agn "sh->fu"
agg
EOF
EXPECT=<<EOF
.--------------------.
|  sh->fu            |
`--------------------'
EOF
RUN

NAME=multiple '>' in cmd line: ?e abc > def>ghi
FILE=-
CMDS=<<EOF
?e abc > def>ghi  # should not hang
"rm ./def>ghi"
rm ./ghi
EOF
EXPECT=<<EOF
EOF
RUN

NAME=hash+space in quoted string
FILE=-
CMDS=<<EOF
agn "Process form A# B# in cloud"
agg
EOF
EXPECT=<<EOF
.-------------------------------.
|  Process form A# B# in cloud  |
`-------------------------------'
EOF
RUN

NAME=cmd outputting trailing space
FILE=-
CMDS=<<EXPECT
# do not convert test to base64
?e aaa
"?e bbb  "
?e ccc
"?e ddd     "
?e eee
"?e fff        "
EXPECT=<<RUN
aaa
bbb  
ccc
ddd     
eee
fff        
RUN

NAME=$alias and `|cmd`
FILE=../bins/elf/before-after-main
CMDS=<<EXPECT
?e `om*`
?e -----
?e `|om*`
?e -----
$initial_map=`|om*`
om
?e -----
om-*
om
?e -----
$initial_map
om  # TODO: map order is reversed
EXPECT=<<RUN
om 3 0x08048000 0x00000a68 0x00000000 r-x fmap.LOAD0 om 3 0x08049ed4 0x0000014c 0x00000ed4 r-- fmap.LOAD1 om 4 0x0804a020 0x00000004 0x00000000 rw- mmap.LOAD1
-----
om 3 0x08048000 0x00000a68 0x00000000 r-x fmap.LOAD0
om 3 0x08049ed4 0x0000014c 0x00000ed4 r-- fmap.LOAD1
om 4 0x0804a020 0x00000004 0x00000000 rw- mmap.LOAD1
-----
 3 fd: 3 +0x00000000 0x08048000 - 0x08048a67 r-x fmap.LOAD0
 2 fd: 3 +0x00000ed4 0x08049ed4 - 0x0804a01f r-- fmap.LOAD1
 1 fd: 4 +0x00000000 0x0804a020 - 0x0804a023 rw- mmap.LOAD1
-----
-----
 3 fd: 4 +0x00000000 0x0804a020 - 0x0804a023 rw- mmap.LOAD1
 2 fd: 3 +0x00000ed4 0x08049ed4 - 0x0804a01f r-- fmap.LOAD1
 1 fd: 3 +0x00000000 0x08048000 - 0x08048a67 r-x fmap.LOAD0
RUN
